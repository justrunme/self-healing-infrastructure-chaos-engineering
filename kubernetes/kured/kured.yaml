apiVersion: v1
kind: Namespace
metadata:
  name: kured
  labels:
    name: kured

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kured
  namespace: kured
  labels:
    app: kured
spec:
  selector:
    matchLabels:
      app: kured
  template:
    metadata:
      labels:
        app: kured
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: kured
      initContainers:
        - name: create-reboot-file
          image: busybox:1.35
          command: ['sh', '-c', 'touch /var/run/reboot-required']
          volumeMounts:
            - name: var-run
              mountPath: /var/run
      containers:
        - name: kured
          image: ghcr.io/weaveworks/kured:main-796014a
          imagePullPolicy: IfNotPresent
          command:
            - /usr/bin/kured
          args:
            - --ds-name=kured
            - --ds-namespace=kured
            - --lock-annotation=weave.works/kured-node-lock
            - --period=1h
            - --metrics-addr=:8080
            - --sentinel-file=/var/run/reboot-required
          env:
            - name: WATCHDOG_TIMEOUT
              value: "30"
          securityContext:
            privileged: true
          volumeMounts:
            - name: var-run
              mountPath: /var/run
            - name: etc-os-release
              mountPath: /etc/os-release
              readOnly: true
            - name: etc-machine-id
              mountPath: /etc/machine-id
              readOnly: true
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: var-run
          hostPath:
            path: /var/run
        - name: etc-os-release
          hostPath:
            path: /etc/os-release
        - name: etc-machine-id
          hostPath:
            path: /etc/machine-id

---
apiVersion: v1
kind: Service
metadata:
  name: kured
  namespace: kured
  labels:
    app: kured
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: metrics
  selector:
    app: kured

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kured
  namespace: kured
  labels:
    app: kured

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kured
  labels:
    app: kured
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "patch", "update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["daemonsets"]
    verbs: ["get", "list", "patch", "update"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kured
  labels:
    app: kured
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kured
subjects:
  - kind: ServiceAccount
    name: kured
    namespace: kured
