apiVersion: v1
kind: Namespace
metadata:
  name: chaos-engineering
  labels:
    name: chaos-engineering

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chaos-mesh-controller-manager
  namespace: chaos-engineering
  labels:
    app: chaos-mesh
    component: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chaos-mesh
      component: controller-manager
  template:
    metadata:
      labels:
        app: chaos-mesh
        component: controller-manager
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10080"
    spec:
      serviceAccountName: chaos-mesh-controller-manager
      containers:
        - name: chaos-mesh-controller-manager
          image: chaosmesh/chaos-mesh:v2.6.0
          imagePullPolicy: IfNotPresent
          command:
            - /usr/local/bin/chaos-controller-manager
          args:
            - --metrics-addr=:10080
            - --enable-leader-election
            - --leader-election-namespace=chaos-engineering
          ports:
            - containerPort: 10080
              name: metrics
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi

---
apiVersion: v1
kind: Service
metadata:
  name: chaos-mesh-controller-manager
  namespace: chaos-engineering
  labels:
    app: chaos-mesh
    component: controller-manager
spec:
  ports:
    - port: 10080
      targetPort: 10080
      protocol: TCP
      name: metrics
  selector:
    app: chaos-mesh
    component: controller-manager

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: chaos-mesh-controller-manager
  namespace: chaos-engineering
  labels:
    app: chaos-mesh
    component: controller-manager

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: chaos-mesh-controller-manager
  labels:
    app: chaos-mesh
    component: controller-manager
rules:
  - apiGroups: [""]
    resources: ["pods", "nodes", "services", "endpoints", "events", "configmaps", "secrets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["chaos-mesh.org"]
    resources: ["*"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: chaos-mesh-controller-manager
  labels:
    app: chaos-mesh
    component: controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-mesh-controller-manager
subjects:
  - kind: ServiceAccount
    name: chaos-mesh-controller-manager
    namespace: chaos-engineering
