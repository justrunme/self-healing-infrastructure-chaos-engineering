name: Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/self-healing-controller

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./kubernetes/self-healing
          file: ./kubernetes/self-healing/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            ## Self-Healing Infrastructure Release ${{ github.ref_name }}
            
            ### üê≥ Docker Images
            - **Latest**: `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest`
            - **Version**: `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}`
            - **Major**: `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ github.ref_name }}`
            
            ### üì¶ What's New
            - Self-Healing Controller improvements
            - Enhanced monitoring and alerting
            - Chaos engineering integration
            - Security enhancements
            - Performance optimizations
            
            ### üöÄ Quick Start
            ```bash
            # Pull the latest image
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            
            # Deploy with Terraform
            ./scripts/deploy-terraform.sh
            ```
            
            ### üìã Changelog
            See the [commit history](https://github.com/${{ github.repository }}/compare/v${{ github.ref_name }}...main) for detailed changes.

      - name: Update Terraform variables
        run: |
          # Update terraform.tfvars with new version
          if [ -f "terraform/terraform.tfvars" ]; then
            sed -i.bak "s|self_healing_controller_image = \".*\"|self_healing_controller_image = \"${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}\"|" terraform/terraform.tfvars
            echo "Updated terraform/terraform.tfvars with version ${{ github.ref_name }}"
          fi

      - name: Commit Terraform updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add terraform/terraform.tfvars
          git commit -m "Update Terraform with release ${{ github.ref_name }}" || echo "No changes to commit"
          git push 